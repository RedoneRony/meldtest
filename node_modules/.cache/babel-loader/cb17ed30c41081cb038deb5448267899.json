{"ast":null,"code":"import _slicedToArray from \"/home/yuko-dev2/meld/frontend-developer-test/react-hooks-simple-login-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/yuko-dev2/meld/frontend-developer-test/react-hooks-simple-login-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/yuko-dev2/meld/frontend-developer-test/react-hooks-simple-login-app/src/LoginWithHooks.jsx\";\nimport React, { useReducer, useEffect, useRef } from 'react';\nimport { verifyLogin } from './utils';\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  isLoggedIn: false,\n  error: ''\n};\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case 'field':\n      {\n        return _objectSpread({}, state, {\n          [action.fieldName]: action.payload\n        });\n      }\n\n    case 'login':\n      {\n        return _objectSpread({}, state, {\n          error: '',\n          isLoading: true,\n          isFocused: true\n        });\n      }\n\n    case 'success':\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          isLoading: false\n        });\n      }\n\n    case 'error':\n      {\n        return _objectSpread({}, state, {\n          error: 'Incorrect username or password entered',\n          isLoggedIn: false,\n          isLoading: false,\n          username: '',\n          password: '',\n          isFocused: true\n        });\n      }\n\n    case 'logout':\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          username: '',\n          password: '',\n          error: ''\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default function LoginWithReducer() {\n  const _useReducer = useReducer(loginReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const username = state.username,\n        password = state.password,\n        isLoading = state.isLoading,\n        isLoggedIn = state.isLoggedIn,\n        error = state.error,\n        isFocused = state.isFocused;\n  const usernameRef = useRef(null);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: verifyLogin\n    });\n\n    try {\n      await verifyLogin({\n        username,\n        password\n      });\n      dispatch({\n        type: 'success'\n      });\n    } catch (error) {\n      dispatch({\n        type: 'error'\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isFocused) {\n      usernameRef.current.focus();\n    }\n  }, [isFocused]);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, isLoggedIn ? React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Welcome \", username, \"!\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'logout'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Log Out\")) : React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, error && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, error, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Please Login!\"), React.createElement(\"input\", {\n    type: \"text\",\n    ref: usernameRef,\n    placeholder: \"Enter username\",\n    value: username,\n    autoFocus: true,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'username',\n      payload: e.currentTarget.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => dispatch({\n      type: 'field',\n      fieldName: 'password',\n      payload: e.currentTarget.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"submit\",\n    type: \"submit\",\n    disabled: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, isLoading ? 'Logging In.....' : 'Log In'))));\n}","map":{"version":3,"sources":["/home/yuko-dev2/meld/frontend-developer-test/react-hooks-simple-login-app/src/LoginWithHooks.jsx"],"names":["React","useReducer","useEffect","useRef","verifyLogin","initialState","username","password","isLoading","isLoggedIn","error","loginReducer","state","action","type","fieldName","payload","isFocused","LoginWithReducer","dispatch","usernameRef","handleSubmit","e","preventDefault","current","focus","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useRef } from 'react';\nimport { verifyLogin } from './utils';\n\nconst initialState = {\n  username: '',\n  password: '',\n  isLoading: false,\n  isLoggedIn: false,\n  error: ''\n};\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case 'field': {\n      return {\n        ...state,\n        [action.fieldName]: action.payload\n      };\n    }\n    case 'login': {\n      return {\n        ...state,\n        error: '',\n        isLoading: true,\n        isFocused: true\n      };\n    }\n    case 'success': {\n      return {\n        ...state,\n        isLoggedIn: true,\n        isLoading: false\n      };\n    }\n    case 'error': {\n      return {\n        ...state,\n        error: 'Incorrect username or password entered',\n        isLoggedIn: false,\n        isLoading: false,\n        username: '',\n        password: '',\n        isFocused: true\n      };\n    }\n    case 'logout': {\n      return {\n        ...state,\n        isLoggedIn: false,\n        username: '',\n        password: '',\n        error: ''\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default function LoginWithReducer() {\n  const [state, dispatch] = useReducer(loginReducer, initialState);\n  const { username, password, isLoading, isLoggedIn, error, isFocused } = state;\n  const usernameRef = useRef(null);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({ type: verifyLogin });\n    try {\n      await verifyLogin({ username, password });\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n\n  useEffect(() => {\n    if (isFocused) {\n      usernameRef.current.focus();\n    }\n  }, [isFocused]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"login-container\">\n        {isLoggedIn ? (\n          <>\n            <h1>Welcome {username}!</h1>\n            <button onClick={() => dispatch({ type: 'logout' })}>\n              Log Out\n            </button>\n          </>\n        ) : (\n          <form className=\"form\" onSubmit={handleSubmit}>\n            {error && <p className=\"error\">{error} </p>}\n            <p>Please Login!</p>\n            <input\n              type=\"text\"\n              ref={usernameRef}\n              placeholder=\"Enter username\"\n              value={username}\n              autoFocus\n              onChange={e =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'username',\n                  payload: e.currentTarget.value\n                })\n              }\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={e =>\n                dispatch({\n                  type: 'field',\n                  fieldName: 'password',\n                  payload: e.currentTarget.value\n                })\n              }\n            />\n            <button className=\"submit\" type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Logging In.....' : 'Log In'}\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}